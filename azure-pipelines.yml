trigger:
  branches:
    include:
      - master
      - dev

pr:
  branches:
    include:
      - master
      - dev

variables:
  solution: 'NogasmChart.sln'
  buildPlatform: 'Any CPU'

jobs:
  - job: Windows
    pool:
      vmImage: 'windows-latest'
    strategy:
      matrix:
        # Debug:
        #   buildConfiguration: Debug
        Release:
          buildConfiguration: Release
    steps:
      - template: build/build-start.yml
        parameters:
          platform: "win-x64"
      # Set up key after build start, otherwise we won't have nuget to update yet.
      - task: MagicChunks@2
        inputs:
          sourcePath: '$(Build.SourcesDirectory)\NogasmChart\secrets.json'
          fileType: 'Json'
          targetPathType: 'source'
          transformationType: 'json'
          transformations: |
            {
              "sentryUrl": "$(SENTRY_URL)"
            }
      - task: Assembly-Info-NetFramework@2
        inputs:
          Path: '$(Build.SourcesDirectory)'
          FileNames: |
            **\AssemblyInfo.cs
            **\AssemblyInfo.vb
          InsertAttributes: false
          FileEncoding: 'auto'
          WriteBOM: false
          LogLevel: 'verbose'
          FailOnWarning: false
          DisableTelemetry: true
          VersionNumber: "0.0.$(Build.BuildId)"
          InformationalVersion: "0.0.$(Build.BuildId)-$(gitVersion)-$(buildConfiguration)"
      - task: CmdLine@2
        inputs:
          script: 'type $(Build.SourcesDirectory)\NogasmChart\Properties\AssemblyInfo.cs'
      - task: UseDotNet@2
        inputs:
          packageType: 'sdk'
          version: '5.0.x'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'build'
          arguments: '-c $(buildConfiguration)'
          displayName: 'dotnet build $(buildConfiguration)'
      - task: DotNetCoreCLI@2
        inputs:
          command: 'publish'
          publishWebProjects: false
          arguments: '-r win-x64 -c $(buildConfiguration) -o bin\x64\$(buildConfiguration)\net5.0-windows\win-x64\publish'
          displayName: 'dotnet publish $(buildConfiguration)'
      - task: PowerShell@2
        displayName: "Build Installer"
        inputs:
          targetType: inline
          script: |
            $Env:CONFIGURATION = "$(buildConfiguration)"
            $Env:BUILD_VERSION = "$(gitVersion)"
            cinst -y --no-progress innosetup
            ISCC nogasm-chart-installer.iss
            move installer\nogasm-chart-installer.exe installer\$(cliBuildName)-installer.exe
      - task: CopyFiles@2
        displayName: "Copy installer to staging"
        inputs:
          contents: "$(System.DefaultWorkingDirectory)/installer/*.exe"
          targetFolder: '$(Build.ArtifactStagingDirectory)'
          flattenFolders: true
      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'win-x64-$(buildConfiguration)'

  - job: Deploy
    dependsOn:
      - Windows
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: build/setup-variables.yml
      - task: DownloadPipelineArtifact@1
        displayName: Download Artifacts from other jobs
        inputs:
          buildType: 'current'
      - task: GitHubRelease@0
        displayName: Upload NogasmChart Release to Github
        condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          gitHubConnection: "release"
          repositoryName: "blackspherefollower/NogasmChart"
          action: "create"
          tagSource: "auto"
          title: "NogasmChart $(gitVersion)"
          assets: |
            $(System.ArtifactsDirectory)\**\*.zip
            $(System.ArtifactsDirectory)\**\*installer.exe
          isPreRelease: false
